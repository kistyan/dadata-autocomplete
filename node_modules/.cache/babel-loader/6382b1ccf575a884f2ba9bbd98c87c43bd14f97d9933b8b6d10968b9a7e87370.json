{"ast":null,"code":"var _jsxFileName = \"/home/kistyan/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\nexport default function DaDataAutocomplete(_ref) {\n  _s();\n  let {\n    type = 'address',\n    label = 'Адрес',\n    initialQuery = '',\n    initialValue,\n    onChange = (event, newValue) => {\n      console.log(newValue);\n    },\n    inputProps\n  } = _ref;\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState(initialQuery);\n  const updateSuggestions = async newInputValue => {\n    if (newInputValue) {\n      axios.post('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address', {\n        query: newInputValue\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Token ' + DADATA_TOKEN\n        }\n      }).then(response => {\n        setSuggestions(response.data.suggestions);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleFocus = async (event, newInputValue) => {\n    updateSuggestions(event.target.value);\n  };\n  const handleInputChange = async (event, newInputValue) => {\n    setInputValue(newInputValue);\n    updateSuggestions(newInputValue);\n  };\n  const handleChange = async (event, newValue) => {\n    onChange(event, newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    filterOptions: x => x,\n    options: suggestions,\n    getOptionLabel: option => option.value,\n    onInputChange: handleInputChange,\n    onFocus: handleFocus,\n    onChange: handleChange,\n    inputValue: inputValue,\n    ...inputProps,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 38\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(DaDataAutocomplete, \"oPx9yFG/mOJ7V1gcZ4WP7qXcyzo=\");\n_c = DaDataAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"DaDataAutocomplete\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","axios","jsxDEV","_jsxDEV","DADATA_TOKEN","DaDataAutocomplete","_ref","_s","type","label","initialQuery","initialValue","onChange","event","newValue","console","log","inputProps","suggestions","setSuggestions","inputValue","setInputValue","updateSuggestions","newInputValue","post","query","headers","then","response","data","catch","error","handleFocus","target","value","handleInputChange","handleChange","freeSolo","filterOptions","x","options","getOptionLabel","option","onInputChange","onFocus","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kistyan/test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport axios from 'axios';\n\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\n\nexport default function DaDataAutocomplete({\n    type='address',\n    label='Адрес',\n    initialQuery='',\n    initialValue,\n    onChange=(event, newValue) => {console.log(newValue);},\n    inputProps\n}) {\n    const [suggestions, setSuggestions] = useState([]);\n    const [inputValue, setInputValue] = useState(initialQuery);\n\n    const updateSuggestions = async (newInputValue) => {\n        if (newInputValue) {\n            axios.post('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address', {\n                query: newInputValue\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Token ' + DADATA_TOKEN\n                }\n            })\n            .then(response => {\n                setSuggestions(response.data.suggestions);\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        } else {\n            setSuggestions([]);\n        }\n    }\n\n    const handleFocus = async (event, newInputValue) => {\n        updateSuggestions(event.target.value);\n    }\n\n    const handleInputChange = async (event, newInputValue) => {\n        setInputValue(newInputValue);\n        updateSuggestions(newInputValue);\n    }\n\n    const handleChange = async (event, newValue) => {\n        onChange(event, newValue);\n    }\n\n    return (\n        <Autocomplete\n            freeSolo={true}\n            filterOptions={(x) => x}\n            options={suggestions}\n            getOptionLabel={(option) => option.value}\n            onInputChange={handleInputChange}\n            onFocus={handleFocus}\n            onChange={handleChange}\n            inputValue={inputValue}\n            {...inputProps}\n            renderInput={(params) => <TextField {...params} label={label} />}\n        />\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG,0CAA0C;AAE/D,eAAe,SAASC,kBAAkBA,CAAAC,IAAA,EAOvC;EAAAC,EAAA;EAAA,IAPwC;IACvCC,IAAI,GAAC,SAAS;IACdC,KAAK,GAAC,OAAO;IACbC,YAAY,GAAC,EAAE;IACfC,YAAY;IACZC,QAAQ,GAACA,CAACC,KAAK,EAAEC,QAAQ,KAAK;MAACC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAAC,CAAC;IACtDG;EACJ,CAAC,GAAAX,IAAA;EACG,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAACY,YAAY,CAAC;EAE1D,MAAMY,iBAAiB,GAAG,MAAOC,aAAa,IAAK;IAC/C,IAAIA,aAAa,EAAE;MACftB,KAAK,CAACuB,IAAI,CAAC,sEAAsE,EAAE;QAC/EC,KAAK,EAAEF;MACX,CAAC,EAAE;QACCG,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,QAAQ,GAAGtB;QAChC;MACJ,CAAC,CAAC,CACDuB,IAAI,CAACC,QAAQ,IAAI;QACdT,cAAc,CAACS,QAAQ,CAACC,IAAI,CAACX,WAAW,CAAC;MAC7C,CAAC,CAAC,CACDY,KAAK,CAACC,KAAK,IAAI;QACZhB,OAAO,CAACC,GAAG,CAACe,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC,MAAM;MACHZ,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC;EAED,MAAMa,WAAW,GAAG,MAAAA,CAAOnB,KAAK,EAAEU,aAAa,KAAK;IAChDD,iBAAiB,CAACT,KAAK,CAACoB,MAAM,CAACC,KAAK,CAAC;EACzC,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAOtB,KAAK,EAAEU,aAAa,KAAK;IACtDF,aAAa,CAACE,aAAa,CAAC;IAC5BD,iBAAiB,CAACC,aAAa,CAAC;EACpC,CAAC;EAED,MAAMa,YAAY,GAAG,MAAAA,CAAOvB,KAAK,EAAEC,QAAQ,KAAK;IAC5CF,QAAQ,CAACC,KAAK,EAAEC,QAAQ,CAAC;EAC7B,CAAC;EAED,oBACIX,OAAA,CAACH,YAAY;IACTqC,QAAQ,EAAE,IAAK;IACfC,aAAa,EAAGC,CAAC,IAAKA,CAAE;IACxBC,OAAO,EAAEtB,WAAY;IACrBuB,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACR,KAAM;IACzCS,aAAa,EAAER,iBAAkB;IACjCS,OAAO,EAAEZ,WAAY;IACrBpB,QAAQ,EAAEwB,YAAa;IACvBhB,UAAU,EAAEA,UAAW;IAAA,GACnBH,UAAU;IACd4B,WAAW,EAAGC,MAAM,iBAAK3C,OAAA,CAACJ,SAAS;MAAA,GAAK+C,MAAM;MAAErC,KAAK,EAAEA;IAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAAC3C,EAAA,CA3DuBF,kBAAkB;AAAA8C,EAAA,GAAlB9C,kBAAkB;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}