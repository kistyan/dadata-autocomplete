{"ast":null,"code":"var _jsxFileName = \"/home/kistyan/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Highlighter } from 'react-highlight-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DADATA_TOKEN = '077c2359913a904470c191acdb2795ab64204c5f';\nexport default function FreeSolo() {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const handleInputChange = async event => {\n    const inputValue = event.target.value;\n    if (inputValue) {\n      try {\n        const response = await fetch('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + DADATA_TOKEN\n          },\n          body: JSON.stringify({\n            query: inputValue\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n        setSuggestions(data.suggestions.map(suggestion => suggestion.value));\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"\\u0410\\u0434\\u0440\\u0435\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this),\n    freeSolo: true,\n    filterOptions: x => x,\n    options: suggestions,\n    onInputChange: handleInputChange,\n    renderOption: (props, option, _ref) => {\n      let {\n        inputValue\n      } = _ref;\n      const parts = [{\n        \"text\": \"Бел\",\n        \"highlight\": true\n      }, {\n        \"text\": \"город\",\n        \"highlight\": false\n      }];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: parts.map((part, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: part.highlight ? 700 : 400\n            },\n            children: part.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(FreeSolo, \"xLFRUKi5CexG/Qcuhka4a4H1SoY=\");\n_c = FreeSolo;\nvar _c;\n$RefreshReg$(_c, \"FreeSolo\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","Highlighter","jsxDEV","_jsxDEV","DADATA_TOKEN","FreeSolo","_s","suggestions","setSuggestions","handleInputChange","event","inputValue","target","value","response","fetch","method","headers","body","JSON","stringify","query","data","json","console","log","map","suggestion","error","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","freeSolo","filterOptions","x","options","onInputChange","renderOption","props","option","_ref","parts","children","part","index","style","fontWeight","highlight","text","_c","$RefreshReg$"],"sources":["/home/kistyan/test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { Highlighter } from 'react-highlight-words';\n\nconst DADATA_TOKEN = '077c2359913a904470c191acdb2795ab64204c5f';\n\nexport default function FreeSolo() {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const handleInputChange = async (event) => {\n    const inputValue = event.target.value;\n    if (inputValue) {\n      try {\n        const response = await fetch('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + DADATA_TOKEN\n          },\n          body: JSON.stringify({\n            query: inputValue\n          })\n        });\n        const data = await response.json();\n\tconsole.log(data);\n        setSuggestions(data.suggestions.map(suggestion => suggestion.value));\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n\n  return (\n    <Autocomplete\n      renderInput={(params) => <TextField {...params} label='Адрес' />}\n      freeSolo={true}\n      filterOptions={(x) => x}\n      options={suggestions}\n      onInputChange={handleInputChange}\n      renderOption={(props, option, { inputValue }) => {\n        const parts = [{\"text\":\"Бел\", \"highlight\":true}, {\"text\":\"город\", \"highlight\":false}];\n        return (\n          <li {...props}>\n            <div>\n              {parts.map((part, index) => (\n                <span\n                  key={index}\n                  style={{\n                    fontWeight: part.highlight ? 700 : 400,\n                  }}\n                >\n                  {part.text}\n                </span>\n              ))}\n            </div>\n          </li>\n        );\n      }}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAG,0CAA0C;AAE/D,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrC,IAAIF,UAAU,EAAE;MACd,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sEAAsE,EAAE;UACnGC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,QAAQ,GAAGb;UAC9B,CAAC;UACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,KAAK,EAAEV;UACT,CAAC;QACH,CAAC,CAAC;QACF,MAAMW,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACzCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACVd,cAAc,CAACc,IAAI,CAACf,WAAW,CAACmB,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACd,KAAK,CAAC,CAAC;MACtE,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;IACF,CAAC,MAAM;MACLpB,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,oBACEL,OAAA,CAACH,YAAY;IACX6B,WAAW,EAAGC,MAAM,iBAAK3B,OAAA,CAACJ,SAAS;MAAA,GAAK+B,MAAM;MAAEC,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IACjEC,QAAQ,EAAE,IAAK;IACfC,aAAa,EAAGC,CAAC,IAAKA,CAAE;IACxBC,OAAO,EAAEhC,WAAY;IACrBiC,aAAa,EAAE/B,iBAAkB;IACjCgC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,EAAAC,IAAA,KAAqB;MAAA,IAAnB;QAAEjC;MAAW,CAAC,GAAAiC,IAAA;MAC1C,MAAMC,KAAK,GAAG,CAAC;QAAC,MAAM,EAAC,KAAK;QAAE,WAAW,EAAC;MAAI,CAAC,EAAE;QAAC,MAAM,EAAC,OAAO;QAAE,WAAW,EAAC;MAAK,CAAC,CAAC;MACrF,oBACE1C,OAAA;QAAA,GAAQuC,KAAK;QAAAI,QAAA,eACX3C,OAAA;UAAA2C,QAAA,EACGD,KAAK,CAACnB,GAAG,CAAC,CAACqB,IAAI,EAAEC,KAAK,kBACrB7C,OAAA;YAEE8C,KAAK,EAAE;cACLC,UAAU,EAAEH,IAAI,CAACI,SAAS,GAAG,GAAG,GAAG;YACrC,CAAE;YAAAL,QAAA,EAEDC,IAAI,CAACK;UAAI,GALLJ,KAAK;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMN,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAET;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAAC7B,EAAA,CAxDuBD,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}