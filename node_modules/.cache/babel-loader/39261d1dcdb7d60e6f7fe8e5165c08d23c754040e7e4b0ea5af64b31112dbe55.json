{"ast":null,"code":"var _jsxFileName = \"/home/kistyan/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n/*\nconst DADATA_TOKEN = '077c2359913a904470c191acdb2795ab64204c5f';\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\nexport default function DaDataAutocomplete(_ref) {\n  _s();\n  let {\n    type = 'address',\n    label = 'Адрес',\n    initialQuery = 'Бел',\n    initialValue,\n    inputProps\n  } = _ref;\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(initialValue);\n  const handleInputChange = async (event, newInputValue) => {\n    if (newInputValue) {\n      try {\n        const response = await fetch('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + DADATA_TOKEN\n          }\n          /*\n                    body: JSON.stringify({\n                      query: newInputValue\n                    })\n          */\n        });\n\n        const data = await response.json();\n        setSuggestions(data.suggestions);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleChange = async (event, newValue) => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    filterOptions: x => x,\n    options: suggestions,\n    getOptionLabel: option => option.value,\n    onInputChange: handleInputChange,\n    onFocus: handleInputChange,\n    onChange: handleChange\n    //inputValue={initialQuery}\n    ,\n    ...inputProps,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DaDataAutocomplete, \"GwJwSfSHu4P+KfSMv4Nu4r//+lE=\");\n_c = DaDataAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"DaDataAutocomplete\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","jsxDEV","_jsxDEV","DADATA_TOKEN","DaDataAutocomplete","_ref","_s","type","label","initialQuery","initialValue","inputProps","suggestions","setSuggestions","value","setValue","handleInputChange","event","newInputValue","response","fetch","method","headers","data","json","error","console","log","handleChange","newValue","freeSolo","filterOptions","x","options","getOptionLabel","option","onInputChange","onFocus","onChange","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kistyan/test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n/*\nconst DADATA_TOKEN = '077c2359913a904470c191acdb2795ab64204c5f';\n*/\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\n\nexport default function DaDataAutocomplete({\n  type='address',\n  label='Адрес',\n  initialQuery='Бел',\n  initialValue,\n  inputProps\n}) {\n  const [suggestions, setSuggestions] = useState([]);\n  const [value, setValue] = useState(initialValue);\n\n  const handleInputChange = async (event, newInputValue) => {\n    if (newInputValue) {\n      try {\n        const response = await fetch('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Token ' + DADATA_TOKEN\n          },\n/*\n          body: JSON.stringify({\n            query: newInputValue\n          })\n*/\n        });\n        const data = await response.json();\n        setSuggestions(data.suggestions);\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      setSuggestions([]);\n    }\n  }\n\n  const handleChange = async (event, newValue) => {\n    setValue(newValue);\n  }\n\n  return (\n    <Autocomplete\n      freeSolo={true}\n      filterOptions={(x) => x}\n      options={suggestions}\n      getOptionLabel={(option) => option.value}\n      onInputChange={handleInputChange}\n      onFocus={handleInputChange}\n      onChange={handleChange}\n      //inputValue={initialQuery}\n      {...inputProps}\n      renderInput={(params) => <TextField {...params} label={label} />}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;;AAErD;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,YAAY,GAAG,0CAA0C;AAE/D,eAAe,SAASC,kBAAkBA,CAAAC,IAAA,EAMvC;EAAAC,EAAA;EAAA,IANwC;IACzCC,IAAI,GAAC,SAAS;IACdC,KAAK,GAAC,OAAO;IACbC,YAAY,GAAC,KAAK;IAClBC,YAAY;IACZC;EACF,CAAC,GAAAN,IAAA;EACC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACY,YAAY,CAAC;EAEhD,MAAMM,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,aAAa,KAAK;IACxD,IAAIA,aAAa,EAAE;MACjB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,GAAGb,IAAI,EAAE;UACnGc,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,QAAQ,GAAGnB;UAC9B;UACV;AACA;AACA;AACA;AACA;QACQ,CAAC,CAAC;;QACF,MAAMoB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,cAAc,CAACU,IAAI,CAACX,WAAW,CAAC;MAClC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC,MAAM;MACLZ,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAAA,CAAOX,KAAK,EAAEY,QAAQ,KAAK;IAC9Cd,QAAQ,CAACc,QAAQ,CAAC;EACpB,CAAC;EAED,oBACE3B,OAAA,CAACF,YAAY;IACX8B,QAAQ,EAAE,IAAK;IACfC,aAAa,EAAGC,CAAC,IAAKA,CAAE;IACxBC,OAAO,EAAErB,WAAY;IACrBsB,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACrB,KAAM;IACzCsB,aAAa,EAAEpB,iBAAkB;IACjCqB,OAAO,EAAErB,iBAAkB;IAC3BsB,QAAQ,EAAEV;IACV;IAAA;IAAA,GACIjB,UAAU;IACd4B,WAAW,EAAGC,MAAM,iBAAKtC,OAAA,CAACH,SAAS;MAAA,GAAKyC,MAAM;MAAEhC,KAAK,EAAEA;IAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEN;AAACtC,EAAA,CArDuBF,kBAAkB;AAAAyC,EAAA,GAAlBzC,kBAAkB;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}