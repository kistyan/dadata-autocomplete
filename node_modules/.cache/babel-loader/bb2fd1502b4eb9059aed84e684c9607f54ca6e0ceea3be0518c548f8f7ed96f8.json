{"ast":null,"code":"var _jsxFileName = \"/home/kistyan/test/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\nexport default function DaDataAutocomplete(_ref) {\n  _s();\n  let {\n    type = 'address',\n    label = 'Адрес',\n    initialQuery = '',\n    onChange = (event, newValue) => {\n      console.log(newValue);\n    },\n    inputProps\n  } = _ref;\n  const [suggestions, setSuggestions] = useState([]);\n  const [inputValue, setInputValue] = useState(initialQuery);\n  const updateSuggestions = newInputValue => {\n    if (newInputValue) {\n      axios.post('https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type, {\n        query: newInputValue\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Token ' + DADATA_TOKEN\n        }\n      }).then(response => {\n        setSuggestions(response.data.suggestions);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  };\n  const handleFocus = (event, newInputValue) => {\n    updateSuggestions(event.target.value);\n  };\n  const handleInputChange = (event, newInputValue) => {\n    setInputValue(newInputValue);\n    updateSuggestions(newInputValue);\n  };\n  const handleChange = (event, newValue) => {\n    onChange(event, newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    filterOptions: x => x,\n    options: suggestions,\n    getOptionLabel: option => option.value,\n    onInputChange: handleInputChange,\n    onFocus: handleFocus,\n    onChange: handleChange,\n    inputValue: inputValue,\n    ...inputProps,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 38\n    }, this),\n    renderOption: (props, option, _ref2) => {\n      let {\n        inputValue\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [option.value, type === 'fms_unit' && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '0.8rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), \"\\u041A\\u043E\\u0434 \\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0434\\u0435\\u043B\\u0435\\u043D\\u0438\\u044F \", option.data.code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(DaDataAutocomplete, \"oPx9yFG/mOJ7V1gcZ4WP7qXcyzo=\");\n_c = DaDataAutocomplete;\nvar _c;\n$RefreshReg$(_c, \"DaDataAutocomplete\");","map":{"version":3,"names":["React","useState","TextField","Autocomplete","axios","jsxDEV","_jsxDEV","DADATA_TOKEN","DaDataAutocomplete","_ref","_s","type","label","initialQuery","onChange","event","newValue","console","log","inputProps","suggestions","setSuggestions","inputValue","setInputValue","updateSuggestions","newInputValue","post","query","headers","then","response","data","catch","error","handleFocus","target","value","handleInputChange","handleChange","freeSolo","filterOptions","x","options","getOptionLabel","option","onInputChange","onFocus","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","renderOption","props","_ref2","children","style","fontSize","code","_c","$RefreshReg$"],"sources":["/home/kistyan/test/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport axios from 'axios';\n\nconst DADATA_TOKEN = 'b64560af54b95583ac2711f8ecb9744514f08b11';\n\nexport default function DaDataAutocomplete({\n    type='address',\n    label='Адрес',\n    initialQuery='',\n    onChange=(event, newValue) => {console.log(newValue);},\n    inputProps\n}) {\n    const [suggestions, setSuggestions] = useState([]);\n    const [inputValue, setInputValue] = useState(initialQuery);\n\n    const updateSuggestions = (newInputValue) => {\n        if (newInputValue) {\n            axios.post(\n                'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/' + type,\n                {\n                    query: newInputValue\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Token ' + DADATA_TOKEN\n                    }\n                }\n            ).then(\n                (response) => {\n                    setSuggestions(response.data.suggestions);\n                }\n            ).catch(\n                (error) => {\n                    console.log(error);\n                }\n            );\n        }\n        else {\n            setSuggestions([]);\n        }\n    }\n\n    const handleFocus = (event, newInputValue) => {\n        updateSuggestions(event.target.value);\n    }\n\n    const handleInputChange = (event, newInputValue) => {\n        setInputValue(newInputValue);\n        updateSuggestions(newInputValue);\n    }\n\n    const handleChange = (event, newValue) => {\n        onChange(event, newValue);\n    }\n\n    return (\n        <Autocomplete\n            freeSolo={true}\n            filterOptions={(x) => x}\n            options={suggestions}\n            getOptionLabel={(option) => option.value}\n            onInputChange={handleInputChange}\n            onFocus={handleFocus}\n            onChange={handleChange}\n            inputValue={inputValue}\n            {...inputProps}\n            renderInput={(params) => <TextField {...params} label={label} />}\n            renderOption={(props, option, {inputValue}) => {\n                return (\n                    <li {...props}>\n                        <div>\n                            {option.value}\n                            {type === 'fms_unit' && (\n                                <span style={{fontSize: '0.8rem'}}>\n                                    <br />\n                                    Код подразделения {option.data.code}\n                                </span>\n                            )}\n                        </div>\n                    </li>\n                );\n            }}\n        />\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}